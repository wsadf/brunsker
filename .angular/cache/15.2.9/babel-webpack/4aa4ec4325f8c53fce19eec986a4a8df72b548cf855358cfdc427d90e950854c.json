{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Imovel } from '../formulario-imovel/imovel';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../api.service\";\nimport * as i3 from \"../via-cep.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/router\";\nfunction FormularioImovelComponent_small_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"*Campo obrigat\\u00F3rio\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction FormularioImovelComponent_span_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Formato inv\\u00E1lido (ex: 12345-678)\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class FormularioImovelComponent {\n  constructor(formBuilder, apiService, viaCepService) {\n    this.formBuilder = formBuilder;\n    this.apiService = apiService;\n    this.viaCepService = viaCepService;\n  }\n  ngOnInit() {\n    this.imovelForm = this.formBuilder.group({\n      endereco: ['', Validators.required],\n      cep: ['', [Validators.required, Validators.pattern(/^\\d{5}-\\d{3}$/)]],\n      cidade: ['', Validators.required],\n      bairro: ['', Validators.required]\n    });\n  }\n  onSubmit() {\n    if (this.imovelForm.invalid) {\n      return;\n    }\n    const {\n      endereco,\n      cep,\n      cidade,\n      bairro,\n      numero\n    } = this.imovelForm.value;\n    // Salvar o imóvel\n    this.apiService.criarImovel(new Imovel(0, endereco, cep, cidade, bairro, numero)).subscribe(response => {\n      console.log('Imóvel salvo com sucesso:', response);\n      this.imovelForm.reset();\n    }, error => {\n      console.error('Erro ao salvar o imóvel:', error);\n    });\n  }\n  buscarEndereco() {\n    const cep = this.imovelForm.controls['cep'].value;\n    // Buscar o endereço a partir do CEP\n    this.viaCepService.buscarEnderecoPorCEP(cep).subscribe(response => {\n      this.imovelForm.patchValue({\n        endereco: response.logradouro,\n        cidade: response.localidade,\n        bairro: response.bairro // Preencha os outros campos do endereço\n      });\n    }, error => {\n      console.error('Erro ao buscar o endereço:', error);\n    });\n  }\n}\nFormularioImovelComponent.ɵfac = function FormularioImovelComponent_Factory(t) {\n  return new (t || FormularioImovelComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.ViaCepService));\n};\nFormularioImovelComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FormularioImovelComponent,\n  selectors: [[\"app-formulario-imovel\"]],\n  decls: 32,\n  vars: 4,\n  consts: [[1, \"container\"], [\"routerLink\", \"/imoveis\"], [1, \"my-3\"], [1, \"mb-3\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"mb-3\"], [\"for\", \"endereco\"], [\"type\", \"text\", \"id\", \"endereco\", \"formControlName\", \"endereco\", 1, \"form-control\"], [\"type\", \"text\", \"id\", \"cidade\", \"formControlName\", \"cidade\", 1, \"form-control\"], [\"type\", \"text\", \"id\", \"bairro\", \"formControlName\", \"bairro\", 1, \"form-control\"], [\"type\", \"text\", \"id\", \"numero\", 1, \"form-control\"], [\"for\", \"cep\"], [\"type\", \"text\", \"id\", \"cep\", \"formControlName\", \"cep\", 1, \"form-control\", 3, \"blur\"], [4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function FormularioImovelComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\")(2, \"a\", 1);\n      i0.ɵɵtext(3, \"Listar Im\\u00F3veis\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(4, \"h2\", 2);\n      i0.ɵɵtext(5, \"Cadastro de Im\\u00F3vel\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function FormularioImovelComponent_Template_form_ngSubmit_6_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(7, \"div\", 4)(8, \"label\", 5);\n      i0.ɵɵtext(9, \"Endere\\u00E7o:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 5);\n      i0.ɵɵtext(13, \"Cidade:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 4)(16, \"label\", 5);\n      i0.ɵɵtext(17, \"Bairro:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 4)(20, \"label\", 5);\n      i0.ɵɵtext(21, \"N\\u00FAmero:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(22, \"input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 4)(24, \"label\", 10);\n      i0.ɵɵtext(25, \"CEP:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"input\", 11);\n      i0.ɵɵlistener(\"blur\", function FormularioImovelComponent_Template_input_blur_26_listener() {\n        return ctx.buscarEndereco();\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(27, FormularioImovelComponent_small_27_Template, 2, 0, \"small\", 12);\n      i0.ɵɵtemplate(28, FormularioImovelComponent_span_28_Template, 2, 0, \"span\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"div\")(30, \"button\", 13);\n      i0.ɵɵtext(31, \"Salvar\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"formGroup\", ctx.imovelForm);\n      i0.ɵɵadvance(21);\n      i0.ɵɵproperty(\"ngIf\", ctx.imovelForm.get(\"cep\").errors == null ? null : ctx.imovelForm.get(\"cep\").errors[\"required\"]);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.imovelForm.get(\"cep\").errors == null ? null : ctx.imovelForm.get(\"cep\").errors[\"pattern\"]);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.imovelForm.invalid);\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i5.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","Imovel","i0","FormularioImovelComponent","constructor","formBuilder","apiService","viaCepService","ngOnInit","imovelForm","group","endereco","required","cep","pattern","cidade","bairro","onSubmit","invalid","numero","value","criarImovel","subscribe","response","console","log","reset","error","buscarEndereco","controls","buscarEnderecoPorCEP","patchValue","logradouro","localidade","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/wesley/brunsker/src/app/formulario-imovel/formulario-imovel.component.ts","/home/wesley/brunsker/src/app/formulario-imovel/formulario-imovel.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService } from '../api.service';\nimport { ViaCepService } from '../via-cep.service';\nimport { Imovel } from '../formulario-imovel/imovel';\n\n@Component({\n  selector: 'app-formulario-imovel',\n  templateUrl: './formulario-imovel.component.html',\n  styleUrls: ['./formulario-imovel.component.css']\n})\nexport class FormularioImovelComponent implements OnInit {\n  imovelForm!: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private apiService: ApiService,\n    private viaCepService: ViaCepService\n  ) {}\n\n  ngOnInit(): void {\n    this.imovelForm = this.formBuilder.group({\n      endereco: ['', Validators.required],\n      cep: ['', [Validators.required, Validators.pattern(/^\\d{5}-\\d{3}$/)]],\n      cidade: ['', Validators.required],\n      bairro: ['', Validators.required]\n    });\n  }\n\n  onSubmit(): void {\n    if (this.imovelForm.invalid) {\n      return;\n    }\n\n    const { endereco, cep, cidade, bairro, numero } = this.imovelForm.value;\n\n    // Salvar o imóvel\n    this.apiService.criarImovel(new Imovel(0, endereco, cep, cidade, bairro, numero)).subscribe(\n      response => {\n        console.log('Imóvel salvo com sucesso:', response);\n        this.imovelForm.reset();\n      },\n      error => {\n        console.error('Erro ao salvar o imóvel:', error);\n      }\n    );\n  }\n\n  buscarEndereco(): void {\n    const cep = this.imovelForm.controls['cep'].value;\n\n    // Buscar o endereço a partir do CEP\n    this.viaCepService.buscarEnderecoPorCEP(cep).subscribe(\n      response => {\n        this.imovelForm.patchValue({\n          endereco: response.logradouro,\n          cidade: response.localidade,\n          bairro: response.bairro          // Preencha os outros campos do endereço\n        });\n      },\n      error => {\n        console.error('Erro ao buscar o endereço:', error);\n      }\n    );\n  }\n}\n","<div class=\"container\">\n    <div>\n        <a routerLink=\"/imoveis\">Listar Imóveis</a>\n      </div>\n      \n<h2 class=\"my-3\">Cadastro de Imóvel</h2>\n\n<form [formGroup]=\"imovelForm\" (ngSubmit)=\"onSubmit()\" class=\"mb-3\">\n  <div class=\"form-group mb-3\">\n    <label for=\"endereco\">Endereço:</label>\n    <input type=\"text\" id=\"endereco\" formControlName=\"endereco\" class=\"form-control\">\n  </div>\n  <div class=\"form-group mb-3\">\n    <label for=\"endereco\">Cidade:</label>\n    <input type=\"text\" id=\"cidade\" formControlName=\"cidade\" class=\"form-control\">\n  </div>\n  <div class=\"form-group mb-3\">\n    <label for=\"endereco\">Bairro:</label>\n    <input type=\"text\" id=\"bairro\" formControlName=\"bairro\" class=\"form-control\">\n  </div>\n  <div class=\"form-group mb-3\">\n    <label for=\"endereco\">Número:</label>\n    <input type=\"text\" id=\"numero\" class=\"form-control\">\n  </div>\n  <div class=\"form-group mb-3\">\n    <label for=\"cep\">CEP:</label>\n    <input type=\"text\" id=\"cep\" formControlName=\"cep\" (blur)=\"buscarEndereco()\" class=\"form-control\">\n    <small *ngIf=\"imovelForm.get('cep')!.errors?.['required']\">*Campo obrigatório</small>\n    <span *ngIf=\"imovelForm.get('cep')!.errors?.['pattern']\">Formato inválido (ex: 12345-678)</span>\n  </div>\n  <div>\n    <button class=\"btn btn-primary\"type=\"submit\" [disabled]=\"imovelForm.invalid\">Salvar</button>\n  </div>\n</form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}